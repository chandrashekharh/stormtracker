// Generated by CoffeeScript 1.7.1
(function() {
  var StormAgent, StormTracker, agent, config, storm,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  StormAgent = require('stormagent');

  StormTracker = (function(_super) {
    __extends(StormTracker, _super);

    function StormTracker() {
      var AgentsManager, AgentsRegistry, CertificateFactory, CertificateRegistry, auth;
      StormTracker.__super__.constructor.apply(this, arguments);
      this["import"](module);
      AgentsRegistry = require("http/agents").AgentsRegistry;
      AgentsManager = require("http/agents").AgentsManager;
      CertificateRegistry = require("security/certificate").CertificateRegistry;
      auth = require("http/auth");
      require("passport").use(require("http/auth").BasicStrategy);
      this.log("StormTracker constructor called " + global.config.datadir);
      this.certsdb = new CertificateRegistry("" + global.config.datadir + "/certs.db");
      this.agentsdb = new AgentsRegistry("" + global.config.datadir + "/agents.db");
      CertificateFactory = require("http/certs").CertificateFactory;
      this.CF = new CertificateFactory(this.certsdb);
      this.CF.init();
      this.AM = new AgentsManager(this.agentsdb, this.CF.CM);
      require("passport").use(require("http/auth").BasicStrategy);
      global.agentsDB = this.agentsdb.db;
    }

    StormTracker.prototype.run = function(config) {
      StormTracker.__super__.run.call(this, config);
      return console.log("Inside run.....");
    };

    return StormTracker;

  })(StormAgent);

  module.exports = StormTracker;

  if (require.main === module) {
    config = require('../package').config;
    global.config = config;
    storm = null;
    agent = new StormTracker;
    agent.run(storm);
  }

}).call(this);
