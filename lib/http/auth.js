// Generated by CoffeeScript 1.7.1
(function() {
  var BasicStrategy, RestClient, headers, passport, restClient, util;

  passport = require("passport");

  RestClient = require("http/client").HttpClient;

  util = require("util");

  headers = {};

  restClient = new RestClient(global.config.stormkeeper.url, global.config.stormkeeper.port);

  BasicStrategy = require("passport-http").BasicStrategy;

  exports.BasicStrategy = new BasicStrategy(function(username, password, done) {
    return process.nextTick(function() {
      util.log("Logging with token " + username);
      return done(null, {
        username: username,
        password: password,
        rules: ["/agents/:id"]
      });
    });
  });

  exports.checkRule = function(req, res, next) {
    var id, key, rule, status, _i, _len, _ref;
    id = this.params.id;
    key = this.params.key;
    status = this.params.status;
    _ref = req.user.rules;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      rule = _ref[_i];
      if (id != null) {
        rule = rule.replace(":id", id);
      }
      if (key != null) {
        rule = rule.replace(":key", id);
      }
      if (status != null) {
        rule = rule.replace(":status", status);
      }
      if (req.originalUrl === rule) {
        next();
        return;
      }
    }
    res.status(401);
    return next("Forbidden");
  };

  exports.authenticate = passport.authenticate('basic', {
    session: false
  });

  exports.authorization = [exports.authenticate, exports.checkRule];

}).call(this);
